============================
How to Use 4-print_square.py
============================

This module introduces a versatile square-printing function known as ``print_square(size)``.

Usage
=====

The function employs the ``#`` character to craft squares. The parameter ``size``
dictates both the height and width of the square.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(1)
    #  # Display a square of size 1.

::

    >>> print_square(4)
    ####
    ####  Showcase a square of size 4.

::

    >>> print_square(8)
    ########
    ########  Demonstrate a larger square with size 8.

In case ``size`` is set to zero, the function will not output anything.

::

    >>> print_square(0)  # Edge case for a square with zero size.

Invalid Sizes
=============

Ensure that the parameter ``size`` is an integer; otherwise, a TypeError will be raised.

::

    >>> print_square("not an int")  # Trigger a TypeError with a non-integer size.
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(5.5)  # Attempting to use a float as size will raise a TypeError.
    Traceback (most recent call last):
    TypeError: size must be an integer

::

    >>> print_square(None)  # Passing None as size will result in a TypeError.
    Traceback (most recent call last):
    TypeError: size must be an integer

If the provided ``size`` is less than zero, a ValueError will be raised.

::

    >>> print_square(-6)  # Trigger a ValueError with a negative size.
    Traceback (most recent call last):
    ValueError: size must be >= 0

Note that type-checking precedes value-checking.

::

    >>> print_square(-6.5)  # Using a negative float as size will raise a TypeError.
    Traceback (most recent call last):
    TypeError: size must be an integer

Remember to always provide at least one argument.

::

    >>> print_square()  # Attempting to call the function without arguments will raise a TypeError.
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'
